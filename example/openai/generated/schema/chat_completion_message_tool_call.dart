// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: invalid_annotation_target
part of open_a_i_schema;

// ==========================================
// CLASS: ChatCompletionMessageToolCall
// ==========================================

/// No Description
@freezed
class ChatCompletionMessageToolCall with _$ChatCompletionMessageToolCall {
  const ChatCompletionMessageToolCall._();

  /// Factory constructor for ChatCompletionMessageToolCall
  const factory ChatCompletionMessageToolCall({
    /// The ID of the tool call.
    required String id,

    /// The type of the tool. Currently, only `function` is supported.
    required ChatCompletionMessageToolCallType type,

    /// The function that the model called.
    required ChatCompletionMessageToolCallFunction function,
  }) = _ChatCompletionMessageToolCall;

  /// Object construction from a JSON representation
  factory ChatCompletionMessageToolCall.fromJson(Map<String, dynamic> json) =>
      _$ChatCompletionMessageToolCallFromJson(json);

  /// List of all property names of schema
  static const List<String> propertyNames = ['id', 'type', 'function'];

  /// Perform validations on the schema property values
  String? validateSchema() {
    return null;
  }

  /// Map representation of object (not serialized)
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'type': type,
      'function': function,
    };
  }
}

// ==========================================
// ENUM: ChatCompletionMessageToolCallType
// ==========================================

/// The type of the tool. Currently, only `function` is supported.
enum ChatCompletionMessageToolCallType {
  @JsonValue('function')
  function,
}

// ==========================================
// CLASS: ChatCompletionMessageToolCallFunction
// ==========================================

/// The function that the model called.
@freezed
class ChatCompletionMessageToolCallFunction
    with _$ChatCompletionMessageToolCallFunction {
  const ChatCompletionMessageToolCallFunction._();

  /// Factory constructor for ChatCompletionMessageToolCallFunction
  const factory ChatCompletionMessageToolCallFunction({
    /// The name of the function to call.
    required String name,

    /// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
    required String arguments,
  }) = _ChatCompletionMessageToolCallFunction;

  /// Object construction from a JSON representation
  factory ChatCompletionMessageToolCallFunction.fromJson(
          Map<String, dynamic> json) =>
      _$ChatCompletionMessageToolCallFunctionFromJson(json);

  /// List of all property names of schema
  static const List<String> propertyNames = ['name', 'arguments'];

  /// Perform validations on the schema property values
  String? validateSchema() {
    return null;
  }

  /// Map representation of object (not serialized)
  Map<String, dynamic> toMap() {
    return {
      'name': name,
      'arguments': arguments,
    };
  }
}
